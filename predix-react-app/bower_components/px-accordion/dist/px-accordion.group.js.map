{"version":3,"sources":["px-accordion.group.es6.js"],"names":["Polymer","is","properties","_expandCollapse","type","String","value","observer","reflect","collapse_active","expand_active","_onExpandCollapse","val","_expandCollapseListener","e","set","currentTarget","dataset","i","accordionsDefined","length","$$","show","chevronIcons","less","hide","more","_getAccordionDefinitions","accordionSet","addedNodes","filter","node","nodeType","Node","ELEMENT_NODE","nodeName","hasClass","element","cls","className","indexOf","ready","boundHandler","bind","_observer","dom","$","accordions","observeNodes"],"mappings":"aAAA,CAAC,UAAW,CACRA,QAAQ,CAEJC,GAAI,oBAFA,CAIJC,WAAY,CACRC,gBAAiB,CACbC,KAAMC,MADO,CAEbC,MAAO,UAFM,CAGbC,SAAU,mBAHG,CAIbC,QAAS,IAJI,CADT,CAORC,gBAAiB,CACbL,KAAMC,MADO,CAEbC,MAAO,QAFM,CAPT,CAWRI,cAAe,CACXN,KAAMC,MADK,CAEXC,MAAO,EAFI,CAXP,CAJR,CAsBJK,kBAAmB,2BAASC,GAAT,CAAc,CAC7B,GAAIA,KAAO,UAAX,CAAuB,CACnB,KAAKH,eAAL,CAAuB,QAAvB,CACA,KAAKC,aAAL,CAAqB,EACxB,CAHD,IAGO,CACH,KAAKD,eAAL,CAAuB,EAAvB,CACA,KAAKC,aAAL,CAAqB,QACxB,CACJ,CA9BG,CAgCJG,wBAAyB,iCAASC,CAAT,CAAY,CAEjC,KAAKC,GAAL,CAAS,iBAAT,CAA4BD,EAAEE,aAAF,CAAgBC,OAAhB,CAAwBL,GAApD,EACA,GAAIE,EAAEE,aAAF,CAAgBC,OAAhB,CAAwBL,GAAxB,GAAgC,QAApC,CAA8C,CAC1C,IAAK,GAAIM,GAAI,CAAb,CAAgBA,EAAI,KAAKC,iBAAL,CAAuBC,MAA3C,CAAmDF,GAAnD,CAAwD,CACpD,KAAKC,iBAAL,CAAuBD,CAAvB,EAA0BG,EAA1B,CAA6B,eAA7B,EAA8CC,IAA9C,GACA,KAAKH,iBAAL,CAAuBD,CAAvB,EAA0BH,GAA1B,CAA8B,SAA9B,CAAyC,KAAKI,iBAAL,CAAuBD,CAAvB,EAA0BK,YAA1B,CAAuCC,IAAhF,CAEH,CACJ,CAND,IAMO,CACH,IAAK,GAAIN,GAAI,CAAb,CAAgBA,EAAI,KAAKC,iBAAL,CAAuBC,MAA3C,CAAmDF,GAAnD,CAAwD,CACpD,KAAKC,iBAAL,CAAuBD,CAAvB,EAA0BG,EAA1B,CAA6B,eAA7B,EAA8CI,IAA9C,GACA,KAAKN,iBAAL,CAAuBD,CAAvB,EAA0BH,GAA1B,CAA8B,SAA9B,CAAyC,KAAKI,iBAAL,CAAuBD,CAAvB,EAA0BK,YAA1B,CAAuCG,IAAhF,CAEH,CACJ,CAEJ,CAjDG,CAmDJC,yBAA0B,kCAASC,YAAT,CAAuB,CAC7C,KAAKT,iBAAL,CAAyBS,aAAaC,UAAb,CAAwBC,MAAxB,CAA+B,SAASC,IAAT,CAAe,CACnE,MAAQA,MAAKC,QAAL,GAAkBC,KAAKC,YAAvB,EAAuCH,KAAKI,QAAL,GAAkB,cACpE,CAFwB,CAI5B,CAxDG,CA0DJC,SAAU,kBAASC,OAAT,CAAkBC,GAAlB,CAAuB,CAC7B,MAAO,CAAC,IAAMD,QAAQE,SAAd,CAA0B,GAA3B,EAAgCC,OAAhC,CAAwC,IAAMF,GAAN,CAAY,GAApD,EAA2D,CAAC,CACtE,CA5DG,CA8DJG,MAAO,gBAAW,CACd,GAAIC,cAAe,KAAKf,wBAAL,CAA8BgB,IAA9B,CAAmC,IAAnC,CAAnB,CACA,KAAKC,SAAL,CAAiB5C,QAAQ6C,GAAR,CAAY,KAAKC,CAAL,CAAOC,UAAnB,EAA+BC,YAA/B,CAA4CN,YAA5C,CACpB,CAjEG,CAAR,CAqEH,CAtED","file":"px-accordion.group.js","sourcesContent":["(function() {\n    Polymer({\n\n        is: 'px-accordion-group',\n\n        properties: {\n            _expandCollapse: {\n                type: String,\n                value: 'collapse',\n                observer: '_onExpandCollapse',\n                reflect: true\n            },\n            collapse_active: {\n                type: String,\n                value: \"active\"\n            },\n            expand_active: {\n                type: String,\n                value: \"\"\n            }\n\n\n        },\n        _onExpandCollapse: function(val) {\n            if (val == \"collapse\") {\n                this.collapse_active = \"active\"\n                this.expand_active = \"\";\n            } else {\n                this.collapse_active = \"\"\n                this.expand_active = \"active\";\n            }\n        },\n\n        _expandCollapseListener: function(e) {\n\n            this.set('_expandCollapse', e.currentTarget.dataset.val);\n            if (e.currentTarget.dataset.val === 'expand') {\n                for (var i = 0; i < this.accordionsDefined.length; i++) {\n                    this.accordionsDefined[i].$$('iron-collapse').show();\n                    this.accordionsDefined[i].set('chevron', this.accordionsDefined[i].chevronIcons.less);\n\n                }\n            } else {\n                for (var i = 0; i < this.accordionsDefined.length; i++) {\n                    this.accordionsDefined[i].$$('iron-collapse').hide();\n                    this.accordionsDefined[i].set('chevron', this.accordionsDefined[i].chevronIcons.more);\n\n                }\n            }\n\n        },\n\n        _getAccordionDefinitions: function(accordionSet) {\n            this.accordionsDefined = accordionSet.addedNodes.filter(function(node) {\n                return (node.nodeType === Node.ELEMENT_NODE && node.nodeName === 'PX-ACCORDION');\n            });\n            //this._accordionCount = accordionsDefined.length;\n        },\n\n        hasClass: function(element, cls) {\n            return (' ' + element.className + ' ').indexOf(' ' + cls + ' ') > -1;\n        },\n\n        ready: function() {\n            var boundHandler = this._getAccordionDefinitions.bind(this);\n            this._observer = Polymer.dom(this.$.accordions).observeNodes(boundHandler);\n        }\n\n\n    });\n})();"]}